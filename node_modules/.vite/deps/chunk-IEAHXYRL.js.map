{
  "version": 3,
  "sources": ["../../@restart/ui/node_modules/uncontrollable/lib/esm/index.js", "../../@react-aria/ssr/dist/SSRProvider.mjs"],
  "sourcesContent": ["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}", "import $670gB$react, {useContext as $670gB$useContext, useState as $670gB$useState, useMemo as $670gB$useMemo, useLayoutEffect as $670gB$useLayoutEffect, useRef as $670gB$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $b5e257d569688ac6$var$defaultContext = {\n    prefix: String(Math.round(Math.random() * 10000000000)),\n    current: 0\n};\nconst $b5e257d569688ac6$var$SSRContext = /*#__PURE__*/ (0, $670gB$react).createContext($b5e257d569688ac6$var$defaultContext);\nconst $b5e257d569688ac6$var$IsSSRContext = /*#__PURE__*/ (0, $670gB$react).createContext(false);\n// This is only used in React < 18.\nfunction $b5e257d569688ac6$var$LegacySSRProvider(props) {\n    let cur = (0, $670gB$useContext)($b5e257d569688ac6$var$SSRContext);\n    let counter = $b5e257d569688ac6$var$useCounter(cur === $b5e257d569688ac6$var$defaultContext);\n    let [isSSR, setIsSSR] = (0, $670gB$useState)(true);\n    let value = (0, $670gB$useMemo)(()=>({\n            // If this is the first SSRProvider, start with an empty string prefix, otherwise\n            // append and increment the counter.\n            prefix: cur === $b5e257d569688ac6$var$defaultContext ? \"\" : `${cur.prefix}-${counter}`,\n            current: 0\n        }), [\n        cur,\n        counter\n    ]);\n    // If on the client, and the component was initially server rendered,\n    // then schedule a layout effect to update the component after hydration.\n    if (typeof document !== \"undefined\") // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    (0, $670gB$useLayoutEffect)(()=>{\n        setIsSSR(false);\n    }, []);\n    return /*#__PURE__*/ (0, $670gB$react).createElement($b5e257d569688ac6$var$SSRContext.Provider, {\n        value: value\n    }, /*#__PURE__*/ (0, $670gB$react).createElement($b5e257d569688ac6$var$IsSSRContext.Provider, {\n        value: isSSR\n    }, props.children));\n}\nlet $b5e257d569688ac6$var$warnedAboutSSRProvider = false;\nfunction $b5e257d569688ac6$export$9f8ac96af4b1b2ae(props) {\n    if (typeof (0, $670gB$react)[\"useId\"] === \"function\") {\n        if (process.env.NODE_ENV !== \"test\" && !$b5e257d569688ac6$var$warnedAboutSSRProvider) {\n            console.warn(\"In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.\");\n            $b5e257d569688ac6$var$warnedAboutSSRProvider = true;\n        }\n        return /*#__PURE__*/ (0, $670gB$react).createElement((0, $670gB$react).Fragment, null, props.children);\n    }\n    return /*#__PURE__*/ (0, $670gB$react).createElement($b5e257d569688ac6$var$LegacySSRProvider, props);\n}\nlet $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== \"undefined\" && window.document && window.document.createElement);\nlet $b5e257d569688ac6$var$componentIds = new WeakMap();\nfunction $b5e257d569688ac6$var$useCounter(isDisabled = false) {\n    let ctx = (0, $670gB$useContext)($b5e257d569688ac6$var$SSRContext);\n    let ref = (0, $670gB$useRef)(null);\n    // eslint-disable-next-line rulesdir/pure-render\n    if (ref.current === null && !isDisabled) {\n        var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n        // This means our id counter will be incremented twice instead of once. This is a problem because on the\n        // server, components are only rendered once and so ids generated on the server won't match the client.\n        // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n        // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n        // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n        // To ensure that we only increment the global counter once, we store the starting id for this component in\n        // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n        // Since React runs the second render immediately after the first, this is safe.\n        // @ts-ignore\n        let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, $670gB$react).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;\n        if (currentOwner) {\n            let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);\n            if (prevComponentValue == null) // On the first render, and first call to useId, store the id and state in our weak map.\n            $b5e257d569688ac6$var$componentIds.set(currentOwner, {\n                id: ctx.current,\n                state: currentOwner.memoizedState\n            });\n            else if (currentOwner.memoizedState !== prevComponentValue.state) {\n                // On the second render, the memoizedState gets reset by React.\n                // Reset the counter, and remove from the weak map so we don't\n                // do this for subsequent useId calls.\n                ctx.current = prevComponentValue.id;\n                $b5e257d569688ac6$var$componentIds.delete(currentOwner);\n            }\n        }\n        // eslint-disable-next-line rulesdir/pure-render\n        ref.current = ++ctx.current;\n    }\n    // eslint-disable-next-line rulesdir/pure-render\n    return ref.current;\n}\nfunction $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {\n    let ctx = (0, $670gB$useContext)($b5e257d569688ac6$var$SSRContext);\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n    // provide a warning to hint to the developer to add one.\n    if (ctx === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM) console.warn(\"When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\");\n    let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);\n    let prefix = ctx === $b5e257d569688ac6$var$defaultContext && process.env.NODE_ENV === \"test\" ? \"react-aria\" : `react-aria${ctx.prefix}`;\n    return defaultId || `${prefix}-${counter}`;\n}\nfunction $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {\n    // @ts-ignore\n    let id = (0, $670gB$react).useId();\n    let [didSSR] = (0, $670gB$useState)($b5e257d569688ac6$export$535bd6ca7f90a273());\n    let prefix = didSSR || process.env.NODE_ENV === \"test\" ? \"react-aria\" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;\n    return defaultId || `${prefix}-${id}`;\n}\nconst $b5e257d569688ac6$export$619500959fc48b26 = typeof (0, $670gB$react)[\"useId\"] === \"function\" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;\nfunction $b5e257d569688ac6$var$getSnapshot() {\n    return false;\n}\nfunction $b5e257d569688ac6$var$getServerSnapshot() {\n    return true;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction $b5e257d569688ac6$var$subscribe(onStoreChange) {\n    // noop\n    return ()=>{};\n}\nfunction $b5e257d569688ac6$export$535bd6ca7f90a273() {\n    // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n    if (typeof (0, $670gB$react)[\"useSyncExternalStore\"] === \"function\") return (0, $670gB$react)[\"useSyncExternalStore\"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return (0, $670gB$useContext)($b5e257d569688ac6$var$IsSSRContext);\n}\n\n\nexport {$b5e257d569688ac6$export$9f8ac96af4b1b2ae as SSRProvider, $b5e257d569688ac6$export$535bd6ca7f90a273 as useIsSSR, $b5e257d569688ac6$export$619500959fc48b26 as useSSRSafeId};\n//# sourceMappingURL=SSRProvider.mjs.map\n"],
  "mappings": ";;;;;;;;AAGA,mBAA8C;AAI9C,SAAS,oBAAoB,WAAW,cAAc,SAAS;AAC7D,QAAM,iBAAa,qBAAO,cAAc,MAAS;AACjD,QAAM,CAAC,YAAY,QAAQ,QAAI,uBAAS,YAAY;AACpD,QAAM,SAAS,cAAc;AAC7B,QAAM,UAAU,WAAW;AAC3B,aAAW,UAAU;AAMrB,MAAI,CAAC,UAAU,WAAW,eAAe,cAAc;AACrD,aAAS,YAAY;AAAA,EACvB;AACA,SAAO,CAAC,SAAS,YAAY,gBAAY,0BAAY,IAAI,SAAS;AAChE,UAAM,CAAC,OAAO,GAAG,IAAI,IAAI;AACzB,QAAI,cAAc,WAAW,OAAO,SAAS,QAAQ,OAAO,GAAG,IAAI;AACnE,aAAS,KAAK;AACd,WAAO;AAAA,EACT,GAAG,CAAC,OAAO,CAAC,CAAC;AACf;;;AC3BA,IAAAA,gBAAwL;AAqBxL,IAAM,uCAAuC;AAAA,EACzC,QAAQ,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,IAAW,CAAC;AAAA,EACtD,SAAS;AACb;AACA,IAAM,oCAAkD,GAAG,cAAAC,SAAc,cAAc,oCAAoC;AAC3H,IAAM,sCAAoD,GAAG,cAAAA,SAAc,cAAc,KAAK;AAE9F,SAAS,wCAAwC,OAAO;AACpD,MAAI,OAAO,GAAG,cAAAC,YAAmB,gCAAgC;AACjE,MAAI,UAAU,iCAAiC,QAAQ,oCAAoC;AAC3F,MAAI,CAAC,OAAO,QAAQ,KAAK,GAAG,cAAAC,UAAiB,IAAI;AACjD,MAAI,SAAS,GAAG,cAAAC,SAAgB,OAAK;AAAA;AAAA;AAAA,IAG7B,QAAQ,QAAQ,uCAAuC,KAAK,GAAG,IAAI,MAAM,IAAI,OAAO;AAAA,IACpF,SAAS;AAAA,EACb,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,CAAC;AAGD,MAAI,OAAO,aAAa;AAGxB,KAAC,GAAG,cAAAC,iBAAwB,MAAI;AAC5B,eAAS,KAAK;AAAA,IAClB,GAAG,CAAC,CAAC;AACL,UAAsB,GAAG,cAAAJ,SAAc,cAAc,iCAAiC,UAAU;AAAA,IAC5F;AAAA,EACJ,IAAkB,GAAG,cAAAA,SAAc,cAAc,mCAAmC,UAAU;AAAA,IAC1F,OAAO;AAAA,EACX,GAAG,MAAM,QAAQ,CAAC;AACtB;AACA,IAAI,+CAA+C;AACnD,SAAS,0CAA0C,OAAO;AACtD,MAAI,QAAQ,GAAG,cAAAA,SAAc,OAAO,MAAM,YAAY;AAClD,QAAuC,CAAC,8CAA8C;AAClF,cAAQ,KAAK,2FAA2F;AACxG,qDAA+C;AAAA,IACnD;AACA,YAAsB,GAAG,cAAAA,SAAc,eAAe,GAAG,cAAAA,SAAc,UAAU,MAAM,MAAM,QAAQ;AAAA,EACzG;AACA,UAAsB,GAAG,cAAAA,SAAc,cAAc,yCAAyC,KAAK;AACvG;AACA,IAAI,kCAAkC,QAAQ,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,SAAS,aAAa;AAC/H,IAAI,qCAAqC,oBAAI,QAAQ;AACrD,SAAS,iCAAiC,aAAa,OAAO;AAC1D,MAAI,OAAO,GAAG,cAAAC,YAAmB,gCAAgC;AACjE,MAAI,OAAO,GAAG,cAAAI,QAAe,IAAI;AAEjC,MAAI,IAAI,YAAY,QAAQ,CAAC,YAAY;AACrC,QAAI,6EAA6E;AAWjF,QAAI,gBAAgB,6DAA6D,GAAG,cAAAL,SAAc,wDAAwD,QAAQ,8DAA8D,SAAS,UAAU,8EAA8E,0DAA0D,uBAAuB,QAAQ,gFAAgF,SAAS,SAAS,4EAA4E;AACxkB,QAAI,cAAc;AACd,UAAI,qBAAqB,mCAAmC,IAAI,YAAY;AAC5E,UAAI,sBAAsB;AAC1B,2CAAmC,IAAI,cAAc;AAAA,UACjD,IAAI,IAAI;AAAA,UACR,OAAO,aAAa;AAAA,QACxB,CAAC;AAAA,eACQ,aAAa,kBAAkB,mBAAmB,OAAO;AAI9D,YAAI,UAAU,mBAAmB;AACjC,2CAAmC,OAAO,YAAY;AAAA,MAC1D;AAAA,IACJ;AAEA,QAAI,UAAU,EAAE,IAAI;AAAA,EACxB;AAEA,SAAO,IAAI;AACf;AACA,SAAS,yCAAyC,WAAW;AACzD,MAAI,OAAO,GAAG,cAAAC,YAAmB,gCAAgC;AAGjE,MAAI,QAAQ,wCAAwC,CAAC;AAAiC,YAAQ,KAAK,iJAAiJ;AACpP,MAAI,UAAU,iCAAiC,CAAC,CAAC,SAAS;AAC1D,MAAI,SAAS,QAAQ,wCAAwC,QAAkC,eAAe,aAAa,IAAI,MAAM;AACrI,SAAO,aAAa,GAAG,MAAM,IAAI,OAAO;AAC5C;AACA,SAAS,yCAAyC,WAAW;AAEzD,MAAI,MAAM,GAAG,cAAAD,SAAc,MAAM;AACjC,MAAI,CAAC,MAAM,KAAK,GAAG,cAAAE,UAAiB,0CAA0C,CAAC;AAC/E,MAAI,SAAS,UAAU,QAAkC,eAAe,aAAa,qCAAqC,MAAM;AAChI,SAAO,aAAa,GAAG,MAAM,IAAI,EAAE;AACvC;AACA,IAAM,4CAA4C,QAAQ,GAAG,cAAAF,SAAc,OAAO,MAAM,aAAa,2CAA2C;AAChJ,SAAS,oCAAoC;AACzC,SAAO;AACX;AACA,SAAS,0CAA0C;AAC/C,SAAO;AACX;AAEA,SAAS,gCAAgC,eAAe;AAEpD,SAAO,MAAI;AAAA,EAAC;AAChB;AACA,SAAS,4CAA4C;AAEjD,MAAI,QAAQ,GAAG,cAAAA,SAAc,sBAAsB,MAAM;AAAY,YAAQ,GAAG,cAAAA,SAAc,sBAAsB,EAAE,iCAAiC,mCAAmC,uCAAuC;AAEjO,UAAQ,GAAG,cAAAC,YAAmB,kCAAkC;AACpE;",
  "names": ["import_react", "$670gB$react", "$670gB$useContext", "$670gB$useState", "$670gB$useMemo", "$670gB$useLayoutEffect", "$670gB$useRef"]
}
